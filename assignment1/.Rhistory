for (hour in 1:24){
hour_t <- rnorm(1, i,5)
temp_value <- paste(i,hour_t)
output_list <- c(output_list,temp_value)
}
}
output_list <- c()
for (i in Forest_List){
for (hour in 1:24){
hour_t <- rnorm(1, i,5)
temp_value <- paste(i,hour_t)
output_list <- c(output_list,temp_value)
}
}
print(output_list)
output_matrix <- matrix(nrow = 5, ncol = 24)
for (day in 1:5){
day_t <- Forest_List[day]
for (hour in 1:24){
hour_t <- rnorm(1,day_t,5)
temp_value <- paste(day_t,hour_t)
output_matrix[day,hour] <- temp_value
}
}
output_matrix2 <- as.vector(output_matrix)
output_matrix2
z<-0
while(a<=5){
z<-z+1
print(z)
}
z<-0
while(z<=5){
z<-z+1
print(z)
}
aa <- sample(0:50,50)
print(aa)
M1 <- matrix(data=aa, nrow = 5, ncol = 10)
print(M1)
M2 <- matrix(data=aa, nrow = 10, ncol = 5)
print(M2)
print(nrow(M1))
M=matrix(0,nrow = nrow(M1) , ncol = ncol(M2))
print(M)
Matrix_multip <- function(M1,M2){
M=matrix(0,nrow = nrow(M1) , ncol = ncol(M2))
for(i in nrow(M1)){
for(s in ncol(M2)){
for (j in ncol(M1)) {
M[i,s] = M[i,s] + M1[i,j]*M2[j,i]
}
}
}
print(M)
}
Matrix_multip(M1,M2)
M1
M2
Matrix_multip(M1,M2)
for (i in nrow(M1)){
print(i)
}
for (i in range(nrow(M1))){
print(i)
}
for (i in range(len(nrow(M1))){
print(i)
}
for (i in len(nrow(M1))){
print(i)
}
for (i in range(1:nrow(M1))){
print(i)
}
for (i in list(1:nrow(M1))){
print(i)
}
for (i in 1:nrow(M1)){
print(i)
}
Matrix_multip <- function(M1,M2){
M=matrix(0,nrow = nrow(M1) , ncol = ncol(M2))
for(i in 1:nrow(M1)){
for(s in 1:ncol(M2)){
for (j in 1:ncol(M1)) {
M[i,s] = M[i,s] + M1[i,j]*M2[j,i]
}
}
}
print(M)
}
Matrix_multip(M1,M2)
M1%*%M2
Matrix_multip <- function(M1,M2){
M=matrix(0,nrow = nrow(M1) , ncol = ncol(M2))
for(i in 1:nrow(M1)){
for(s in 1:ncol(M2)){
for (j in 1:ncol(M1)) {
M[i,s] = M[i,s] + M1[s,j]*M2[j,s]
}
}
}
print(M)
}
Matrix_multip(M1,M2)
Matrix_multip <- function(M1,M2){
M=matrix(0,nrow = nrow(M1) , ncol = ncol(M2))
for(i in 1:nrow(M1)){
for(s in 1:ncol(M2)){
for (j in 1:nrow(M1)) {
for (t in ncol(M1)) {
M[i,s] = M[i,s] + M1[j,t]*M2[t,j]
}
}
}
}
print(M)
}
Matrix_multip(M1,M2)
Matrix_multip <- function(M1,M2){
M=matrix(0,nrow = nrow(M1) , ncol = ncol(M2))
for(i in 1:nrow(M1)){
for(s in 1:ncol(M2)){
for (j in 1:nrow(M1)) {
for (t in ncol(M1)) {
M[i,s] = M[i,s] + M1[i,t]*M2[t,i]
}
}
}
}
print(M)
}
Matrix_multip(M1,M2)
Matrix_multip <- function(M1,M2){
M=matrix(nrow = nrow(M1) , ncol = ncol(M2))
for(j in 1:ncol(M2)){
value=0
for (s in 1:nrow(M1)) {
for (t in ncol(M1)) {
value <- value+ M1[s,t]*M2[t,s]
}
M[s,j] = value
}
}
print(M)
}
Matrix_multip(M1,M2)
Matrix_multip <- function(M1,M2){
M=matrix(nrow = nrow(M1) , ncol = ncol(M2))
for(j in 1:ncol(M2)){
value=0
for (s in 1:nrow(M1)) {
for (t in ncol(M1)) {
value <- value+ M1[s,t]*M2[t,s]
}
M[j,s] = value
}
}
print(M)
}
Matrix_multip(M1,M2)
M1%*%M2
Matrix_multip <- function(M1,M2){
M=matrix(0,nrow = nrow(M1) , ncol = ncol(M2))
for(j in 1:ncol(M2)){
for (s in 1:nrow(M1)) {
for (t in ncol(M1)) {
M[j,s] <- M[j,s] + M1[s,t]*M2[t,s]
}
}
}
print(M)
}
Matrix_multip(M1,M2)
Matrix_multip <- function(M1,M2){
M=matrix(0,nrow = nrow(M1) , ncol = ncol(M2))
for(j in 1:ncol(M2)){
for (s in 1:nrow(M1)) {
for (t in 1:ncol(M1)) {
M[j,s] <- M[j,s] + M1[s,t]*M2[t,s]
}
}
}
print(M)
}
Matrix_multip(M1,M2)
M1%*%M2
Matrix_multip <- function(M1,M2){
M=matrix(0,nrow = nrow(M1) , ncol = ncol(M2))
for(j in 1:nrow(M1)){
for (s in 1:nrow(M1)) {
for (t in 1:ncol(M1)) {
M[j,s] <- M[j,s] + M1[j,t]*M2[t,j]
}
}
}
print(M)
}
Matrix_multip(M1,M2)
Matrix_multip <- function(M1,M2){
M=matrix(0,nrow = nrow(M1) , ncol = ncol(M2))
for(j in 1:nrow(M1)){
for (s in 1:nrow(M1)) {
for (t in 1:ncol(M1)) {
M[j,s] <- M[j,s] + M1[j,t]*M2[t,s]
}
}
}
print(M)
}
Matrix_multip(M1,M2)
M1%*%M2
library(gtools)
combinations(3,2,letters[1:3])
combinations(3,2,letters[1:3],repeats=TRUE)
7/2
7%2
7%%2
Least_moves <- function(x){
steps=0
while (x !=1) {
if(x%%2 == 1){
x <- x-1
steps <- steps + 1
}else{
x <- x/2
steps <- steps + 1
}
}
print(steps)
}
Least_moves(2)
Least_moves(5)
Least_moves(53)
Least_moves(87)
list(1,2,3,4,5,6,7,8,9)
seq(0, 1, length.out = 11)
seq(stats::rnorm(20)) # effectively 'along'
seq(1, 9, by = 2)     # matches 'end'
seq(1, 9, by = pi)    # stays below 'end'
seq(1.575, 5.125, by = 0.05)
seq(1.575, 5.125, by = 0.05)
seq(17)
View(check_air_quality)
jiecheng <- function(n){
a <-1
for(i in 1:n){
a <- a*i
return(a)
}
iecheng <- function(n){
a <-1
for(i in 1:n){
a <- a*i
return(a)
}
jiecheng <- function(n){
a <-1
for(i in 1:n){
a <- a*i
return(a)
}
jiecheng <- function(n){
a <-1
for(i in 1:n){
a <- a*i
return(a)
}
jie_cheng <- function(n){
a <-1
for(i in 1:n){
a <- a*i
}
return(a)
}
print(jie_cheng(5))
jie_cheng <- function(n){
a <-1
for(i in 1:n){
a <- a*i
}
return(a)
}
for (j in 1:num){
if (distance[j] <0 | distance[j]>160000 ){
del_label= c(del_label,j)
}
}
print(del_label)
data <- read.csv('2281305.csv')
data_vis <- data$VIS
print(data_vis)
num=length(data_vis)
print(num)
distance <- list()
dis_qua <- list()
vari_code <- list()
qua_vari_code <- list()
del_label <-c()
for(i in 1:num){
distance[i] <- as.numeric(substr(data_vis[i:i],1,6))
dis_qua[i] <- substr(data_vis[i:i],8,8)
vari_code[i] <- substr(data_vis[i:i],10,10)
qua_vari_code[i] <-substr(data_vis[i:i],12,12)
}
getwd()
setwd('/Users/still/Downloads/gitkrea/ESE5032_Assignments_12032374/assignment1')
getwd()
data <- read.csv('2281305.csv')
data_vis <- data$VIS
print(data_vis)
num=length(data_vis)
print(num)
distance <- list()
dis_qua <- list()
vari_code <- list()
qua_vari_code <- list()
del_label <-c()
for(i in 1:num){
distance[i] <- as.numeric(substr(data_vis[i:i],1,6))
dis_qua[i] <- substr(data_vis[i:i],8,8)
vari_code[i] <- substr(data_vis[i:i],10,10)
qua_vari_code[i] <-substr(data_vis[i:i],12,12)
}
print(distance[29254])
for (j in 1:num){
if (distance[j] <0 | distance[j]>160000 ){
del_label= c(del_label,j)
}
}
print(del_label)
for (j in 1:num){
if (dis_qua[i] != '1' | vari_code[i] !='N' | qua_vari_code[i] != '1'){
del_label= c(del_label,j)
}
}
print(del_label)
for (j in 1:num){
if (dis_qua[i] != '1' | vari_code[i] !='N' | qua_vari_code[i] != '1'){
del_label= c(del_label,j)
}
}
print(len(del_label))
del_label <-c()
for (j in 1:num){
if (distance[j] <0 | distance[j]>160000 ){
del_label= c(del_label,j)
}
}
print(length(del_label))
for (j in 1:num){
if (dis_qua[i] != '1' | vari_code[i] !='N' | qua_vari_code[i] != '1'){
del_label= c(del_label,j)
}
}
print(length(del_label))
del_label <-c()
keeling_Data <- read.csv(file = 'co2_mm_mlo.csv',header = T)
colnames(keeling_Data)
head(keeling_Data)
tail(keeling_Data)
head(keeling_Data,3)
tail(keeling_Data,4)
keeling_Data$co2
min(keeling_Data$co2)
max(keeling_Data$co2)
range(keeling_Data$co2)
mean(keeling_Data$co2)
median(keeling_Data$co2)
hist(keeling_Data$co2)
summary(keeling_Data$co2)
keeling_Data$co2[1:10]
keeling_Data$year[200:210]
keeling_Data$co2[0]
plot(keeling_Data$decimal_date,keeling_Data$co2)
plot(keeling_Data$decimal_date,keeling_Data$co2, ylim=c(300,420),type='l')
Year <- keeling_Data$decimal_date
co2_ppm <- keeling_Data$co2
co2_ppm[which(co2_ppm == -99.99)] <- NA
plot(Year,co2_ppm,type='l')
mean(co2_ppm)
mean(co2_ppm, na.rm = T)
#Data Type
keeling_Data$co2[1:10]*1e3
keeling_Data$month[1:10] + keeling_Data$co2[1:10]
typeof(keeling_Data$co2)
typeof(keeling_Data$month)
typeof(keeling_Data$quality)
x <- 1<=2
typeof(x)
typeof(1)
typeof(1L)
typeof(1+1i)
#Data Structure
class(keeling_Data)
vectore_1 <- vector(length=3)
vectore_1
vectore_2 <- vector(mode='character',length=3)
vectore_2
str(vectore_2)
vector_3 <- c(1,2,3)
vector_3
vector_4 <- c(1,2,3,'4')
vector_4
vector_5 <- c('a',TRUE)
vector_5
vector_6 <- c(0,TRUE)
vector_6
vector_7 <- c('0','2','4')
vector_7
str(vector_7)
vector_8 <- as.numeric(vector_7)
vector_8
vector_9 <- as.logical(vector_8)
vector_9
keeling_Data$quality[1:10]
keeling_Data$quality <- as.logical(keeling_Data$quality)
# NEW Data
keeling_Data$quality[1:10]
length(keeling_Data$quality)
x <- 1:26
x <- x*2
names(x) <- LETTERS
x
str(keeling_Data$month)
keeling_Data$month <- factor(keeling_Data$month)
class(keeling_Data$month)
str(keeling_Data$month)
typeof(keeling_Data$month)
#List
list_1 <- list(1,'a',TRUE,1+4i)
list_1
list_2 <- list(title = 'Number',number = 1:10,data = TRUE)
list_2
typeof(keeling_Data)
keeling_Data[,1]
keeling_Data[,2]
typeof(keeling_Data[,1])
str(keeling_Data[1,])
matrix_1 <- matrix(0, ncol=6, nrow=3)
matrix_1
#Exercise1
keeling_Data[2]
keeling_Data[[2]]
keeling_Data$month
keeling_Data['month']
keeling_Data[2,2]
keeling_Data[,2]
keeling_Data[2,]
#Exercise2
matrix_ex2 <- matrix(1:50,ncol=5,nrow=10)
matrix_ex2
?matrix
matrix_ex3 <- matrix(1:50,10,5,TRUE)
matrix_ex3
#Exercise3
data_228 <- read.csv('2281305.csv')
names(data_228)
BaoAn_T=data_228['TMP']
head(BaoAn_T)
tail(BaoAn_T)
typeof(BaoAn_T)
Obs_Time = data_228$DATE
head(BaoAn_T)
tail(BaoAn_T)
head(Obs_Time)
tail(Obs_Time)
typeof(BaoAn_T)
BaoAn_T[,1]
BaoAn_T_value=substr(BaoAn_T[,1],1,5)
BaoAn_T_flag = substr(BaoAn_T[,1],7,7)
print(BaoAn_T_flag)
print(BaoAn_T_value)
BaoAn_T_value2=as.numeric(BaoAn_T_value)
BaoAn_T_value2
BaoAn_T_flag2=as.logical(as.numeric(BaoAn_T_flag))
BaoAn_T_flag2
BaoAn_T_value2[which(BaoAn_T_value2==9999)] <-NA
BaoAn_T_value2
BaoAn_T_value3=BaoAn_T_value2*0.1
BaoAn_T_value3
Obs_Time2=as.Date(Obs_Time)
plot(Obs_Time2,BaoAn_T_value3,lwd=0.5,type='l',col='blue')
tem_min=min(BaoAn_T_value)
tem_min
tem_max=max(BaoAn_T_value)
tem_max
temp_min=which.min(BaoAn_T_value)
temp_min
temp_max=which.max(BaoAn_T_value)
temp_max
data <- read.csv('2281305.csv')
data_vis <- data$VIS
print(data_vis)
num=length(data_vis)
print(num)
distance <- list()
dis_qua <- list()
vari_code <- list()
qua_vari_code <- list()
del_label <-c()
for(i in 1:num){
distance[i] <- as.numeric(substr(data_vis[i:i],1,6))
dis_qua[i] <- substr(data_vis[i:i],8,8)
vari_code[i] <- substr(data_vis[i:i],10,10)
qua_vari_code[i] <-substr(data_vis[i:i],12,12)
if (distance[j] <0 | distance[j]>160000 | dis_qua[i] != '1' | vari_code[i] !='N' | qua_vari_code[i] != '1'){
del_label= c(del_label,j)
}
}
print(distance[29254])
