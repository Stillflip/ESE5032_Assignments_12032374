output_matrix2 <- as.vector(output_matrix)
output_matrix2
z<-0
while(a<=5){
z<-z+1
print(z)
}
z<-0
while(z<=5){
z<-z+1
print(z)
}
aa <- sample(0:50,50)
print(aa)
M1 <- matrix(data=aa, nrow = 5, ncol = 10)
print(M1)
M2 <- matrix(data=aa, nrow = 10, ncol = 5)
print(M2)
print(nrow(M1))
M=matrix(0,nrow = nrow(M1) , ncol = ncol(M2))
print(M)
Matrix_multip <- function(M1,M2){
M=matrix(0,nrow = nrow(M1) , ncol = ncol(M2))
for(i in nrow(M1)){
for(s in ncol(M2)){
for (j in ncol(M1)) {
M[i,s] = M[i,s] + M1[i,j]*M2[j,i]
}
}
}
print(M)
}
Matrix_multip(M1,M2)
M1
M2
Matrix_multip(M1,M2)
for (i in nrow(M1)){
print(i)
}
for (i in range(nrow(M1))){
print(i)
}
for (i in range(len(nrow(M1))){
print(i)
}
for (i in len(nrow(M1))){
print(i)
}
for (i in range(1:nrow(M1))){
print(i)
}
for (i in list(1:nrow(M1))){
print(i)
}
for (i in 1:nrow(M1)){
print(i)
}
Matrix_multip <- function(M1,M2){
M=matrix(0,nrow = nrow(M1) , ncol = ncol(M2))
for(i in 1:nrow(M1)){
for(s in 1:ncol(M2)){
for (j in 1:ncol(M1)) {
M[i,s] = M[i,s] + M1[i,j]*M2[j,i]
}
}
}
print(M)
}
Matrix_multip(M1,M2)
M1%*%M2
Matrix_multip <- function(M1,M2){
M=matrix(0,nrow = nrow(M1) , ncol = ncol(M2))
for(i in 1:nrow(M1)){
for(s in 1:ncol(M2)){
for (j in 1:ncol(M1)) {
M[i,s] = M[i,s] + M1[s,j]*M2[j,s]
}
}
}
print(M)
}
Matrix_multip(M1,M2)
Matrix_multip <- function(M1,M2){
M=matrix(0,nrow = nrow(M1) , ncol = ncol(M2))
for(i in 1:nrow(M1)){
for(s in 1:ncol(M2)){
for (j in 1:nrow(M1)) {
for (t in ncol(M1)) {
M[i,s] = M[i,s] + M1[j,t]*M2[t,j]
}
}
}
}
print(M)
}
Matrix_multip(M1,M2)
Matrix_multip <- function(M1,M2){
M=matrix(0,nrow = nrow(M1) , ncol = ncol(M2))
for(i in 1:nrow(M1)){
for(s in 1:ncol(M2)){
for (j in 1:nrow(M1)) {
for (t in ncol(M1)) {
M[i,s] = M[i,s] + M1[i,t]*M2[t,i]
}
}
}
}
print(M)
}
Matrix_multip(M1,M2)
Matrix_multip <- function(M1,M2){
M=matrix(nrow = nrow(M1) , ncol = ncol(M2))
for(j in 1:ncol(M2)){
value=0
for (s in 1:nrow(M1)) {
for (t in ncol(M1)) {
value <- value+ M1[s,t]*M2[t,s]
}
M[s,j] = value
}
}
print(M)
}
Matrix_multip(M1,M2)
Matrix_multip <- function(M1,M2){
M=matrix(nrow = nrow(M1) , ncol = ncol(M2))
for(j in 1:ncol(M2)){
value=0
for (s in 1:nrow(M1)) {
for (t in ncol(M1)) {
value <- value+ M1[s,t]*M2[t,s]
}
M[j,s] = value
}
}
print(M)
}
Matrix_multip(M1,M2)
M1%*%M2
Matrix_multip <- function(M1,M2){
M=matrix(0,nrow = nrow(M1) , ncol = ncol(M2))
for(j in 1:ncol(M2)){
for (s in 1:nrow(M1)) {
for (t in ncol(M1)) {
M[j,s] <- M[j,s] + M1[s,t]*M2[t,s]
}
}
}
print(M)
}
Matrix_multip(M1,M2)
Matrix_multip <- function(M1,M2){
M=matrix(0,nrow = nrow(M1) , ncol = ncol(M2))
for(j in 1:ncol(M2)){
for (s in 1:nrow(M1)) {
for (t in 1:ncol(M1)) {
M[j,s] <- M[j,s] + M1[s,t]*M2[t,s]
}
}
}
print(M)
}
Matrix_multip(M1,M2)
M1%*%M2
Matrix_multip <- function(M1,M2){
M=matrix(0,nrow = nrow(M1) , ncol = ncol(M2))
for(j in 1:nrow(M1)){
for (s in 1:nrow(M1)) {
for (t in 1:ncol(M1)) {
M[j,s] <- M[j,s] + M1[j,t]*M2[t,j]
}
}
}
print(M)
}
Matrix_multip(M1,M2)
Matrix_multip <- function(M1,M2){
M=matrix(0,nrow = nrow(M1) , ncol = ncol(M2))
for(j in 1:nrow(M1)){
for (s in 1:nrow(M1)) {
for (t in 1:ncol(M1)) {
M[j,s] <- M[j,s] + M1[j,t]*M2[t,s]
}
}
}
print(M)
}
Matrix_multip(M1,M2)
M1%*%M2
library(gtools)
combinations(3,2,letters[1:3])
combinations(3,2,letters[1:3],repeats=TRUE)
7/2
7%2
7%%2
Least_moves <- function(x){
steps=0
while (x !=1) {
if(x%%2 == 1){
x <- x-1
steps <- steps + 1
}else{
x <- x/2
steps <- steps + 1
}
}
print(steps)
}
Least_moves(2)
Least_moves(5)
Least_moves(53)
Least_moves(87)
list(1,2,3,4,5,6,7,8,9)
seq(0, 1, length.out = 11)
seq(stats::rnorm(20)) # effectively 'along'
seq(1, 9, by = 2)     # matches 'end'
seq(1, 9, by = pi)    # stays below 'end'
seq(1.575, 5.125, by = 0.05)
seq(1.575, 5.125, by = 0.05)
seq(17)
View(check_air_quality)
jiecheng <- function(n){
a <-1
for(i in 1:n){
a <- a*i
return(a)
}
iecheng <- function(n){
a <-1
for(i in 1:n){
a <- a*i
return(a)
}
jiecheng <- function(n){
a <-1
for(i in 1:n){
a <- a*i
return(a)
}
jiecheng <- function(n){
a <-1
for(i in 1:n){
a <- a*i
return(a)
}
jie_cheng <- function(n){
a <-1
for(i in 1:n){
a <- a*i
}
return(a)
}
print(jie_cheng(5))
jie_cheng <- function(n){
a <-1
for(i in 1:n){
a <- a*i
}
return(a)
}
#1.1
Sig_Eq <- read.delim(file = "signif.txt",header = TRUE)
getwd()
setwd('/Users/still/Downloads/gitkrea/ESE5032_Assignments_12032374/assignment2')
#1.1
Sig_Eq <- read.delim(file = "signif.txt",header = TRUE)
#1.1
Sig_Eq <- read.delim(file = "signif.txt",header = TRUE)
View(Sig_Eq)
#1.2
Sig_Eqs %>%
select(DEATHS) %>%
arrange(desc(num_death)) %>%
#1.2
Sig_Eqs %>%
select(DEATHS) %>%
arrange(desc(num_death))
#1.2
Sig_Eqs %>%
select(COUNTRY,DEATHS) %>%
arrange(desc(DEATHS))
library(dplyr)
library(ggplot2)
library(tidyr)
#1.1
Sig_Eq <- read.delim(file = "signif.txt",header = TRUE)
head(Sig_Eq)
Sig_Eqs <- as_tibble(Sig_Eq)
Sig_Eqs
#1.2
Sig_Eqs %>%
select(COUNTRY,DEATHS) %>%
arrange(desc(DEATHS))
#1.2
death_country <- Sig_Eqs %>%
select(COUNTRY,DEATHS) %>%
arrange(desc(DEATHS))
death_10 <- death_country[1:10]
death_10 <- death_country$COUNTRY[1:10]
print(death_country$COUNTRY[1:10])
#1.2
death_country <- Sig_Eqs %>%
select(COUNTRY,YEAR,DEATHS) %>%
group_by(COUNTRY) %>%
summarise(total_death = sum(DEATHS)) %>%
arrange(desc(total_death))
print(death_country$COUNTRY[1:10])
death_country
#1.2
death_country <- Sig_Eqs %>%
select(COUNTRY,YEAR,DEATHS) %>%
group_by(COUNTRY) %>%
#summarise(total_death = sum(DEATHS)) %>%
#arrange(desc(total_death))
death_country
#1.2
death_country <- Sig_Eqs %>%
select(COUNTRY,YEAR,DEATHS) %>%
group_by(COUNTRY)
death_country
#1.2
death_country <- Sig_Eqs %>%
select(COUNTRY,YEAR,DEATHS) %>%
group_by(COUNTRY) %>%
summarise(total_death = sum(DEATHS))
death_country
arrange(desc(total_death))
#1.2
death_country <- Sig_Eqs %>%
select(COUNTRY,YEAR,DEATHS) %>%
group_by(COUNTRY) %>%
summarise(total_death = sum(DEATHS))
death_country
#1.2
death_country <- Sig_Eqs %>%
select(COUNTRY,YEAR,DEATHS) %>%
group_by(COUNTRY) %>%
summarise(total_death = sum(DEATHS)) %>%
arrange(desc(total_death))
death_country
death_country1 <- Sig_Eqs %>%
select(COUNTRY,YEAR,DEATHS) %>%
group_by(COUNTRY) %>%
arrange(desc(DEATHS))
View(death_country1)
death_country1 <- Sig_Eqs %>%
select(COUNTRY,YEAR,DEATHS) %>%
group_by(COUNTRY)
View(death_country1)
death_country1 <- Sig_Eqs %>%
select(COUNTRY,YEAR,DEATHS) %>%
group_by(COUNTRY) %>%
mutate(tot_de = sum(DEATHS))
View(death_country1)
death_country1 <- Sig_Eqs %>%
select(COUNTRY,YEAR,DEATHS) %>%
group_by(COUNTRY) %>%
mutate(tot_de = sum(DEATHS)) %>%
arrange(desc(tot_de))
View(death_country1)
#1.2
death_country <- Sig_Eqs %>%
select(COUNTRY,YEAR,DEATHS) %>%
group_by(COUNTRY,YEAR) %>%
summarise(total_death = sum(DEATHS)) %>%
arrange(desc(total_death))
death_country
#1.2
death_country <- Sig_Eqs %>%
select(COUNTRY,YEAR,DEATHS) %>%
group_by(COUNTRY) %>%
summarise(total_death = sum(DEATHS)) %>%
arrange(desc(total_death))
death_country
#1.2
death_country <- Sig_Eqs %>%
select(COUNTRY,YEAR,DEATHS) %>%
group_by(COUNTRY) %>%
summarise(total_death = sum(DEATHS)) %>%
arrange(desc(total_death))
death_country
death_country1 <- Sig_Eqs %>%
select(COUNTRY,YEAR,DEATHS) %>%
group_by(COUNTRY) %>%
mutate(tot_de = sum(DEATHS)) %>%
arrange(DEATHS)
death_country1
death_country1 <- Sig_Eqs %>%
select(COUNTRY,YEAR,DEATHS) %>%
group_by(COUNTRY) %>%
mutate(tot_de = sum(DEATHS)) %>%
arrange(desc(DEATHS))
death_country1
#1.2
death_country <- Sig_Eqs %>%
select(COUNTRY,DEATHS) %>%
group_by(COUNTRY) %>%
summarise(total_death = sum(DEATHS)) %>%
arrange(desc(total_death))
death_country
#1.2
death_country <- Sig_Eqs %>%
select(COUNTRY,DEATHS) %>%
group_by(COUNTRY) %>%
summarise(total_death = sum(DEATHS)) %>%
arrange(desc(total_death))
death_country
#1.2
death_country <- Sig_Eqs %>%
select(COUNTRY,DEATHS) %>%
group_by(COUNTRY) %>%
summarise(total_death = sum(DEATHS,na.rm = TRUE)) %>%
arrange(desc(total_death))
death_country
print(death_country$COUNTRY[1:10])
#1.3
Sig_Eqs %>%
select(YEAR,EQ_PRIMARY) %>%
group_by(YEAR) %>%
summarise(mag_6.0 = EQ_PRIMARY>6.0)
#1.3
Sig_Eqs %>%
select(YEAR,EQ_PRIMARY,COUNTRY) %>%
group_by(YEAR) %>%
summarise(mag_6.0 = sum(EQ_PRIMARY>6.0))
#1.3
Sig_Eqs %>%
select(YEAR,EQ_PRIMARY,COUNTRY) %>%
group_by(YEAR) %>%
summarise(mag_6.0 = sum(EQ_PRIMARY>6.0)) %>%
arrange(mag_6.0)
#1.3
Sig_Eqs %>%
select(YEAR,EQ_PRIMARY,COUNTRY) %>%
group_by(YEAR) %>%
summarise(mag_6.0 = sum(EQ_PRIMARY>6.0, na.rm= TRUE)) %>%
arrange(mag_6.0)
#1.3
Sig_Eqs %>%
select(YEAR,EQ_PRIMARY,COUNTRY) %>%
group_by(YEAR) %>%
summarise(mag_6.0 = sum(EQ_PRIMARY>6.0, na.rm= TRUE)) %>%
arrange(desc(mag_6.0))
#1.3
Sig_Eqs %>%
select(YEAR,EQ_PRIMARY,COUNTRY) %>%
group_by(YEAR) %>%
summarise(mag_6.0 = sum(EQ_PRIMARY>6.0, na.rm= TRUE)) %>%
arrange(desc(mag_6.0)) %>%
ggplot(aes(YEAR,mag_6.0),color=month)
#1.3
Sig_Eqs %>%
select(YEAR,EQ_PRIMARY,COUNTRY) %>%
group_by(YEAR) %>%
summarise(mag_6.0 = sum(EQ_PRIMARY>6.0, na.rm= TRUE)) %>%
arrange(desc(mag_6.0)) %>%
ggplot(aes(YEAR,mag_6.0,color=month)) +
geom_line()
#1.3
Sig_Eqs %>%
select(YEAR,EQ_PRIMARY,COUNTRY) %>%
group_by(YEAR) %>%
summarise(mag_6.0 = sum(EQ_PRIMARY>6.0, na.rm= TRUE)) %>%
arrange(desc(mag_6.0)) %>%
ggplot(aes(YEAR,mag_6.0)) +
geom_line()
#1.3
Sig_Eqs %>%
select(YEAR,EQ_PRIMARY,COUNTRY) %>%
group_by(YEAR) %>%
summarise(mag_6.0 = sum(EQ_PRIMARY>6.0, na.rm= TRUE)) %>%
arrange(desc(mag_6.0)) %>%
ggplot(aes(YEAR,mag_6.0,'blue')) +
geom_line()
#1.3
Sig_Eqs %>%
select(YEAR,EQ_PRIMARY,COUNTRY) %>%
group_by(YEAR) %>%
summarise(mag_6.0 = sum(EQ_PRIMARY>6.0, na.rm= TRUE)) %>%
arrange(desc(mag_6.0)) %>%
ggplot(aes(YEAR,mag_6.0)) +
geom_line()
Sig_Eq %>%
select(COUNTRY,EQ_PRIMARY) %>%
group_by(COUNTRY) %>%
summarise(num_eq = sum(EQ_PRIMARY,na.rm= TRUE))
Sig_Eq %>%
select(YEAR,COUNTRY,EQ_PRIMARY) %>%
group_by(COUNTRY) %>%
summarise(num_eq = sum(EQ_PRIMARY,na.rm= TRUE))
print(co_eq$AFGHANISTAN)
co_eq = Sig_Eq %>%
select(YEAR,COUNTRY,EQ_PRIMARY) %>%
group_by(COUNTRY) %>%
summarise(num_eq = sum(EQ_PRIMARY,na.rm= TRUE))
print(co_eq$AFGHANISTAN)
print(co_eq[AFGHANISTAN])
co_eq
print(co_eq['AFGHANISTAN'])
if(co_eq$COUNTRY == 'AFGHANISTAN'){
a=  co_eq $EQ_PRIMARY
if(co_eq$COUNTRY == 'AFGHANISTAN'){
a=  co_eq $EQ_PRIMARY
}
co_eq = Sig_Eq %>%
select(YEAR,COUNTRY,EQ_PRIMARY) %>%
group_by(COUNTRY) %>%
summarise(num_eq = sum(EQ_PRIMARY,na.rm= TRUE)) %>%
mutate(co_eq = ifelse(COUNTRY=='AFGHANISTAN', num_eq,NA))
co_eq
a<-2
a<-2
