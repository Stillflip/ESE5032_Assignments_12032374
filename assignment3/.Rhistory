1:10
2^(1:10)
x<-1:10
2^x
ls()
rm(x)
AQI<-69
if(AQI<=50){}
print('Excellent')
AQI=69
if (AQI<=50){
print('Excellent')
}
print('not excellent')
AQI=69
if (AQI<=50){
print('Excellent')
}else{
print('not excellent')
}
AQI=69
if (AQI<=50){
print('Excellent')
}else if(AQI<=100){
print('good')
} else {
print('pollution')
}
AQI=48
AQI=48
if (AQI<=50){
print('Excellent')
}else if(AQI<=100){
print('good')
} else {
print('pollution')
}
AQI=111
if (AQI<=50){
print('Excellent')
}else if(AQI<=100){
print('good')
} else {
print('pollution')
}
x<- 4 == 3
if(x){
'4==3'
}else{
'4!=3'
}
check_air_quality <- function(AQI){
if (AQI <=50){
print('air quality is excellent')
}
if (AQI > 50 && AQI <=100){
print("air quality is Good")
}
if (AQI > 100 && AQI <=150){
print('air pollution,level I')
}
if (AQI>150 && AQI <=200){
print('air pollution, level II')
}
if (AQI>200 && AQI<300){
print('air pollution, level III')
}
if (AQI>300){
print('air pollution, level IV')
}
}
check_air_quality(40)
check_air_quality(120)
check_air_quality(320)
Forest_List = c(28,27,28,26,27)
print(Forest_List)
for (i in Forest_List){
print(i)
}
for (i in Forest_List){
for (hour in 1:24){
hour_t <- rnorm(1, i,5)
print(paste(i,hour_t))
}
}
output_list <- c()
for (i in Forest_List){
for (hour in 1:24){
hour_t <- rnorm(1, i,5)
temp_value <- paste(i,hour_t)
output_list <- c(output_list,temp_value)
}
}
output_list <- c()
for (i in Forest_List){
for (hour in 1:24){
hour_t <- rnorm(1, i,5)
temp_value <- paste(i,hour_t)
output_list <- c(output_list,temp_value)
}
}
print(output_list)
output_matrix <- matrix(nrow = 5, ncol = 24)
for (day in 1:5){
day_t <- Forest_List[day]
for (hour in 1:24){
hour_t <- rnorm(1,day_t,5)
temp_value <- paste(day_t,hour_t)
output_matrix[day,hour] <- temp_value
}
}
output_matrix2 <- as.vector(output_matrix)
output_matrix2
z<-0
while(a<=5){
z<-z+1
print(z)
}
z<-0
while(z<=5){
z<-z+1
print(z)
}
aa <- sample(0:50,50)
print(aa)
M1 <- matrix(data=aa, nrow = 5, ncol = 10)
print(M1)
M2 <- matrix(data=aa, nrow = 10, ncol = 5)
print(M2)
print(nrow(M1))
M=matrix(0,nrow = nrow(M1) , ncol = ncol(M2))
print(M)
Matrix_multip <- function(M1,M2){
M=matrix(0,nrow = nrow(M1) , ncol = ncol(M2))
for(i in nrow(M1)){
for(s in ncol(M2)){
for (j in ncol(M1)) {
M[i,s] = M[i,s] + M1[i,j]*M2[j,i]
}
}
}
print(M)
}
Matrix_multip(M1,M2)
M1
M2
Matrix_multip(M1,M2)
for (i in nrow(M1)){
print(i)
}
for (i in range(nrow(M1))){
print(i)
}
for (i in range(len(nrow(M1))){
print(i)
}
for (i in len(nrow(M1))){
print(i)
}
for (i in range(1:nrow(M1))){
print(i)
}
for (i in list(1:nrow(M1))){
print(i)
}
for (i in 1:nrow(M1)){
print(i)
}
Matrix_multip <- function(M1,M2){
M=matrix(0,nrow = nrow(M1) , ncol = ncol(M2))
for(i in 1:nrow(M1)){
for(s in 1:ncol(M2)){
for (j in 1:ncol(M1)) {
M[i,s] = M[i,s] + M1[i,j]*M2[j,i]
}
}
}
print(M)
}
Matrix_multip(M1,M2)
M1%*%M2
Matrix_multip <- function(M1,M2){
M=matrix(0,nrow = nrow(M1) , ncol = ncol(M2))
for(i in 1:nrow(M1)){
for(s in 1:ncol(M2)){
for (j in 1:ncol(M1)) {
M[i,s] = M[i,s] + M1[s,j]*M2[j,s]
}
}
}
print(M)
}
Matrix_multip(M1,M2)
Matrix_multip <- function(M1,M2){
M=matrix(0,nrow = nrow(M1) , ncol = ncol(M2))
for(i in 1:nrow(M1)){
for(s in 1:ncol(M2)){
for (j in 1:nrow(M1)) {
for (t in ncol(M1)) {
M[i,s] = M[i,s] + M1[j,t]*M2[t,j]
}
}
}
}
print(M)
}
Matrix_multip(M1,M2)
Matrix_multip <- function(M1,M2){
M=matrix(0,nrow = nrow(M1) , ncol = ncol(M2))
for(i in 1:nrow(M1)){
for(s in 1:ncol(M2)){
for (j in 1:nrow(M1)) {
for (t in ncol(M1)) {
M[i,s] = M[i,s] + M1[i,t]*M2[t,i]
}
}
}
}
print(M)
}
Matrix_multip(M1,M2)
Matrix_multip <- function(M1,M2){
M=matrix(nrow = nrow(M1) , ncol = ncol(M2))
for(j in 1:ncol(M2)){
value=0
for (s in 1:nrow(M1)) {
for (t in ncol(M1)) {
value <- value+ M1[s,t]*M2[t,s]
}
M[s,j] = value
}
}
print(M)
}
Matrix_multip(M1,M2)
Matrix_multip <- function(M1,M2){
M=matrix(nrow = nrow(M1) , ncol = ncol(M2))
for(j in 1:ncol(M2)){
value=0
for (s in 1:nrow(M1)) {
for (t in ncol(M1)) {
value <- value+ M1[s,t]*M2[t,s]
}
M[j,s] = value
}
}
print(M)
}
Matrix_multip(M1,M2)
M1%*%M2
Matrix_multip <- function(M1,M2){
M=matrix(0,nrow = nrow(M1) , ncol = ncol(M2))
for(j in 1:ncol(M2)){
for (s in 1:nrow(M1)) {
for (t in ncol(M1)) {
M[j,s] <- M[j,s] + M1[s,t]*M2[t,s]
}
}
}
print(M)
}
Matrix_multip(M1,M2)
Matrix_multip <- function(M1,M2){
M=matrix(0,nrow = nrow(M1) , ncol = ncol(M2))
for(j in 1:ncol(M2)){
for (s in 1:nrow(M1)) {
for (t in 1:ncol(M1)) {
M[j,s] <- M[j,s] + M1[s,t]*M2[t,s]
}
}
}
print(M)
}
Matrix_multip(M1,M2)
M1%*%M2
Matrix_multip <- function(M1,M2){
M=matrix(0,nrow = nrow(M1) , ncol = ncol(M2))
for(j in 1:nrow(M1)){
for (s in 1:nrow(M1)) {
for (t in 1:ncol(M1)) {
M[j,s] <- M[j,s] + M1[j,t]*M2[t,j]
}
}
}
print(M)
}
Matrix_multip(M1,M2)
Matrix_multip <- function(M1,M2){
M=matrix(0,nrow = nrow(M1) , ncol = ncol(M2))
for(j in 1:nrow(M1)){
for (s in 1:nrow(M1)) {
for (t in 1:ncol(M1)) {
M[j,s] <- M[j,s] + M1[j,t]*M2[t,s]
}
}
}
print(M)
}
Matrix_multip(M1,M2)
M1%*%M2
library(gtools)
combinations(3,2,letters[1:3])
combinations(3,2,letters[1:3],repeats=TRUE)
7/2
7%2
7%%2
Least_moves <- function(x){
steps=0
while (x !=1) {
if(x%%2 == 1){
x <- x-1
steps <- steps + 1
}else{
x <- x/2
steps <- steps + 1
}
}
print(steps)
}
Least_moves(2)
Least_moves(5)
Least_moves(53)
Least_moves(87)
list(1,2,3,4,5,6,7,8,9)
seq(0, 1, length.out = 11)
seq(stats::rnorm(20)) # effectively 'along'
seq(1, 9, by = 2)     # matches 'end'
seq(1, 9, by = pi)    # stays below 'end'
seq(1.575, 5.125, by = 0.05)
seq(1.575, 5.125, by = 0.05)
seq(17)
View(check_air_quality)
jiecheng <- function(n){
a <-1
for(i in 1:n){
a <- a*i
return(a)
}
iecheng <- function(n){
a <-1
for(i in 1:n){
a <- a*i
return(a)
}
jiecheng <- function(n){
a <-1
for(i in 1:n){
a <- a*i
return(a)
}
jiecheng <- function(n){
a <-1
for(i in 1:n){
a <- a*i
return(a)
}
jie_cheng <- function(n){
a <-1
for(i in 1:n){
a <- a*i
}
return(a)
}
print(jie_cheng(5))
jie_cheng <- function(n){
a <-1
for(i in 1:n){
a <- a*i
}
return(a)
}
getwd()
setwd('/Users/still/Downloads/gitkrea/ESE5032_Assignments_12032374/assignment3')
library(dplyr)
Bone <- c(rep('Rib 16',times=4),rep('Gastralia',times=6),rep('Dorsal vertebra',times=10),
rep('Femur',times=4),rep('Tibia',times=5),rep('Metatarsal',times=4),
rep('Phalange',times=3),rep('Proximal caudal',times=6),rep('Mid-caudal',times=5),
rep('Distal caudal',times=5))
oxygen_isotopic <- c(11.10,11.22,11.29,11.49,11.32,11.40,11.71,11.60,11.78,12.05,10.61,
10.88,11.12,11.24,11.43,10.92,11.20,11.30,11.62,11.70,11.70,11.79,
11.91,12.15,11.33,11.41,11.62,12.15,12.30,11.32,11.65,11.96,12.15,
11.54,11.89,12.04,10.93,11.01,11.08,11.12,11.28,11.37,11.35,11.43,
11.50,11.57,11.92,11.95,12.01,12.25,12.30,12.39)
rex_data <- cbind(Bone,as.numeric(oxygen_isotopic))
rex_data <- as_tibble(rex_data)
means_bone<- rex_data %>%
mutate(Bone_new = factor(Bone,ordered = TRUE))
glimpse(means_bone)
#mean(means_bone$oxygen_isotopic)
means_bone %>%
group_by(Bone_new) %>%
summarise(
count= n(),
means = mean(as.numeric(oxygen_isotopic), na.rm = TRUE)
)
#mean(means_bone$oxygen_isotopic)
means_bone %>%
group_by(Bone_new) %>%
mutate(means=as.numeric(oxygen_isotopic), na.rm = TRUE)
#mean(means_bone$oxygen_isotopic)
means_bone %>%
group_by(Bone_new) %>%
mutate(means=mean(as.numeric(oxygen_isotopic)), na.rm = TRUE)
View(means_bone)
#mean(means_bone$oxygen_isotopic)
means_bone %>%
group_by(Bone_new) %>%
mutate(means=mean(as.numeric(oxygen_isotopic)), na.rm = TRUE)
View(means_bone)
View(rex_data)
Bone <- c(rep('Rib 16',times=4),rep('Gastralia',times=6),rep('Dorsal vertebra',times=10),
rep('Femur',times=4),rep('Tibia',times=5),rep('Metatarsal',times=4),
rep('Phalange',times=3),rep('Proximal caudal',times=6),rep('Mid-caudal',times=5),
rep('Distal caudal',times=5))
oxygen_isotopic <- c(11.10,11.22,11.29,11.49,11.32,11.40,11.71,11.60,11.78,12.05,10.61,
10.88,11.12,11.24,11.43,10.92,11.20,11.30,11.62,11.70,11.70,11.79,
11.91,12.15,11.33,11.41,11.62,12.15,12.30,11.32,11.65,11.96,12.15,
11.54,11.89,12.04,10.93,11.01,11.08,11.12,11.28,11.37,11.35,11.43,
11.50,11.57,11.92,11.95,12.01,12.25,12.30,12.39)
rex_data <- cbind(Bone,as.numeric(oxygen_isotopic))
rex_data <- as_tibble(rex_data)
means_bone<- rex_data %>%
mutate(Bone_new = factor(Bone,ordered = TRUE))
glimpse(means_bone)
View(means_bone)
View(rex_data)
Bone <- c(rep('Rib 16',times=4),rep('Gastralia',times=6),rep('Dorsal vertebra',times=10),
rep('Femur',times=4),rep('Tibia',times=5),rep('Metatarsal',times=4),
rep('Phalange',times=3),rep('Proximal caudal',times=6),rep('Mid-caudal',times=5),
rep('Distal caudal',times=5))
oxygen_isotopic <- c(11.10,11.22,11.29,11.49,11.32,11.40,11.71,11.60,11.78,12.05,10.61,
10.88,11.12,11.24,11.43,10.92,11.20,11.30,11.62,11.70,11.70,11.79,
11.91,12.15,11.33,11.41,11.62,12.15,12.30,11.32,11.65,11.96,12.15,
11.54,11.89,12.04,10.93,11.01,11.08,11.12,11.28,11.37,11.35,11.43,
11.50,11.57,11.92,11.95,12.01,12.25,12.30,12.39)
rex_data <- cbind(Bone,as.numeric(oxygen_isotopic))
View(rex_data)
